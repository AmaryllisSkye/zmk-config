#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    macros {
        macro_wq: macro_wq {
            compatible = "zmk,behavior-macro";
            label = "macro_wq";
            #binding-cells = <0>;
            bindings = <&kp ESCAPE &kp COLON &kp W &kp Q &kp ENTER>;
            tap-ms = <20>;
        };
    };

    behaviors {
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&kp LBKT>,
                <&kp LBRC>,
                <&kp C_PREV>;
        };
        td1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_1";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&kp RBKT>,
                <&kp RBRC>,
                <&kp C_NEXT>;
        };
        gresc: grave_escape {
            compatible = "zmk,behavior-mod-morph";
            label = "GRAVE_ESCAPE";
            #binding-cells = <0>;
            bindings = <&kp ESC>, <&kp GRAVE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
   &gresc    &kp N1  &kp N2    &kp N3    &kp N4     &kp N5                     &kp N6     &kp N7     &kp N8      &kp N9         &kp N0     &kp BACKSPACE
   &kp TAB   &kp Q   &kp W     &kp E     &kp R      &kp T                      &kp Y      &kp U      &kp I       &kp O          &kp P         &kp MINUS
 &kp LCTRL   &kp A   &kp S     &kp D     &kp F      &kp G                      &kp H      &kp J      &kp K       &kp L  &kp SEMICOLON  &kp SINGLE_QUOTE
 &kp LSHFT   &kp Z   &kp X     &kp C     &kp V      &kp B    &td0    &td1      &kp N      &kp M  &kp COMMA  &kp PERIOD      &kp SLASH        &kp RSHIFT
                            &kp LALT  &kp LGUI  &kp SPACE   &mo 2   &mo 1  &kp SPACE  &kp ENTER   &kp RALT
            >;
        };

        lower_layer {
            bindings = <
 &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                   &none       &none      &none          &none    &none    &none
     &kp F1        &kp F2        &kp F3        &kp F4        &kp F5        &kp F6                  &kp F7      &kp F8     &kp F9        &kp F10  &kp F11  &kp F12
      &none         &none         &none         &none         &none         &none                   &none  &kp INSERT   &kp HOME    &kp PAGE_UP    &none    &none
      &none         &none         &none         &none         &none         &none   &none   &none   &none  &kp DELETE    &kp END  &kp PAGE_DOWN    &none    &none
                                                &none         &none         &none   &none   &none   &none       &none  &macro_wq
            >;
        };

        raise_layer {
            bindings = <
          &none    &none    &none    &none    &none    &none                          &none     &none   &none      &none   &none   &none
        &kp F13  &kp F14  &kp F15  &kp F16  &kp F17  &kp F18                          &none     &none   &none      &none   &none   &none
        &kp F19  &kp F20  &kp F21  &kp F22  &kp F23  &kp F24                       &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT   &none   &none
 &kp LEFT_SHIFT    &none    &none    &none    &none    &none  &kp EQUAL  &kp BSLH     &none     &none   &none      &none   &none   &none
                                     &none    &none    &none      &none     &none     &none     &none   &none
            >;
        };
    };
};
